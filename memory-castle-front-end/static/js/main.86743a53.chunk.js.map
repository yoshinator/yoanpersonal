{"version":3,"sources":["components/Memory.js","components/Memories.js","JSONAPIAdpater.js","components/CreateMemory.js","components/EditCastle.js","components/Castle.js","components/Castles.js","components/CreateCastle.js","components/User.js","components/Users.js","App.js","serviceWorker.js","index.js"],"names":["Memory","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drag","event","updateMemory","div","document","getElementById","concat","state","id","parentElement","newObj","x","clientX","offsetWidth","y","clientY","offsetHeight","setState","memory","text","_this2","react_default","a","createElement","draggable","onDragEnd","className","style","left","top","onClick","deleteMemory","Component","Memories","renderMemories","memories","map","components_Memory","key","Fragment","JSONAPIAdapter","endpoint","headers","Accept","Content-Type","fetch","method","objectSpread","Authorization","localStorage","getItem","then","response","json","body","arguments","length","undefined","JSON","stringify","ApiAdapter","CreateMemory","castle_id","castle","createMemory","preventDefault","createItem","resp","ok","console","error","newMemoryData","updateCastle","handleChange","target","value","nextProps","log","onSubmit","type","onChange","placeholder","name","autoFocus","EditCastle","image","updateItem","castleId","handleEdit","defineProperty","MemoryAdapter","Castle","handleExpand","expanded","handleDelete","deleteItem","updateCurrentUser","editing","push","addMemory","isNaN","width","newMem","height","memoryPositionObject","mem","filtered","filter","toConsumableArray","memoryId","newMems","jsxBuilder","castle_image","getSingle","styleNotExpanded","background","backgroundRepeat","backgroundSize","zIndex","src","alt","components_CreateMemory","components_Memories","EditCastle_EditCastle","Castles","renderCastles","castles","Castle_Castle","Math","random","user","CreateCastle","createCastle","formData","FormData","append","newCastleData","newUser","user_id","onFileChange","e","files","signOut","clear","htmlFor","Welcome","_ref","User","_ref2","User_Welcome","components_CreateCastle","components_Castles","Users","email","password","passwordConfirmation","signUp","currentUser","isEmpty","obj","hasOwnProperty","setCurrentUser","createNewUser","setItem","jwt","alert","loginUser","components_User","App","href","rel","components_Users","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86743a53.chunk.js","sourcesContent":["\nimport React, { Component } from 'react'\nclass Memory extends Component {\n\n  constructor(props){\n    super(props);\n    this.state ={\n      id: this.props.memory.id,\n      x: this.props.memory.x,\n      y: this.props.memory.y,\n      text: this.props.memory.text\n    }\n  }\n\n  drag = (event, updateMemory) => {\n      const div = document.getElementById(`memory-${this.state.id}`).parentElement\n      const newObj = {\n        x: `${(event.clientX / div.offsetWidth) * 100}%`,\n        y: `${(event.clientY / div.offsetHeight) * 100}%`\n      }\n      let {x, y} = newObj\n      this.setState({x,y})\n      updateMemory(newObj, this.state.id)\n    }\n  render() {\n    return (\n      <div draggable=\"true\" onDragEnd={event => this.drag(event, this.props.updateMemory)} className=\"memory\" id={`memory-${this.state.id}`} style={{ left: `${this.state.x}`, top: `${this.state.y}` }} >\n        {\" \"}\n        {this.state.text}\n        <button className=\"delete-memory\" onClick={() => this.props.deleteMemory(this.state.id)}>\n          X\n      </button>\n      </div>\n    )\n  }\n}\n\n\nexport default Memory; \n\n\n","import React, { Component } from 'react'\nimport Memory from './Memory'\n\nclass Memories extends Component {\n  \n\n  renderMemories = () => {\n\n    return this.props.memories.map(memory => <Memory memory={memory} key={memory.id} deleteMemory={this.props.deleteMemory} updateMemory={this.props.updateMemory}/>)\n  }\n\n\n  render() {\n\n    return <>{this.renderMemories()}</>;\n\n  }\n\n\n\n}\n\n\nexport default Memories","class JSONAPIAdapter {\n  constructor(endpoint) {\n    this.endpoint = `https://memory-castle.herokuapp.com/${endpoint}`;\n    this.headers = {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n  }\n  getAll() {\n    return fetch(this.endpoint,{\n      method: \"GET\",\n      headers: { ...this.headers, Authorization: localStorage.getItem('jwt') },\n    }).then(response => response.json());\n  }\n\n  getSingle(id) {\n    return fetch(`${this.endpoint}/${id}`, {\n      headers: { ...this.headers, Authorization: localStorage.getItem('jwt') }\n    })\n    .then(response => {\n      return response.json()\n    })\n  }\n  // { key: 'value', key: { key: 'value', key: 'value'} }\n  createItem(body, id=\"\") {\n    return fetch(`${this.endpoint}/${id}`, {\n      method: \"POST\",\n      headers: { ...this.headers, Authorization: localStorage.getItem('jwt')},\n      body: JSON.stringify(body) // { key: 'value', key: { key: 'value', key: 'value'} }\n    });\n  }\n\n  updateItem(body, id) {\n    return fetch(`${this.endpoint}/${id}`, {\n      method: \"PATCH\",\n      headers: { ...this.headers, Authorization: localStorage.getItem('jwt') },\n      body: JSON.stringify(body)\n    });\n  }\n\n  deleteItem(id){\n    return fetch(`${this.endpoint}/${id}`, {\n      method: \"DELETE\", \n      headers: { ...this.headers, Authorization: localStorage.getItem('jwt') },\n    })\n      .then(response => response.json()); \n  }\n\n}\n\n\nexport default JSONAPIAdapter;","import React, { Component } from \"react\";\nimport JSONAPIAdapter from \"../JSONAPIAdpater\";\nconst ApiAdapter = new JSONAPIAdapter(\"api/v1/memories/\");\n\nclass CreateMemory extends Component {\n\n  state ={\n      text: \"\",\n      castle_id: this.props.castle.id,\n      x: `${this.props.x}%`,\n      y: `${this.props.y}%`\n    }\n\n\n  createMemory = (event) => {\n    event.preventDefault()\n    ApiAdapter.createItem(this.state)\n      .then(resp => {\n        if (resp.ok) {\n          //confirm\n        }\n        else {\n          console.error(resp)\n        }\n        return resp.json()\n      }).then(newMemoryData => {\n        this.props.updateCastle(newMemoryData)\n        this.setState({\n          x: \"\",\n          y: \"\", \n          text: \"\"\n        })\n      })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      text: event.target.value\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n      this.setState({ \n        x: `${nextProps.x}%` ,\n        y: `${nextProps.y}%`\n      });\n\n  }\n\n\n\n    render(){\n      console.log(this.state)\n      if (this.state.x === \"\") {\n        return \n      }\n      else {\n      return (\n        <div className=\"create-memory-form\" style={{ left: `${this.state.x}`, top: `${this.state.y}` }}> \n          <form onSubmit={this.createMemory} >\n            <input type=\"text\" onChange={this.handleChange} placeholder=\"What do you want to remember?\" name=\"text\" value={this.state.text} autoFocus/>\n            <button type=\"submit\">Create Memory</button>\n          </form>\n        </div>\n      )\n      }\n    }\n\n}\n\nexport default CreateMemory;","\nimport React, { Component } from 'react'\n\nexport default class EditCastle extends Component {\n\n  state ={\n    name: this.props.name,\n    image: this.props.image\n  }\n\n  updateCastle = (event) => {\n    event.preventDefault()\n    \n    this.props.ApiAdapter.updateItem(this.state, this.props.castleId)\n      .then(this.props.handleEdit(event, this.state.name, this.state.image))\n\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value    \n    })\n  } \n\n\n  render() {\n    return <div className=\"edit-castle-form\">\n        <form onSubmit={event => this.updateCastle(event)}>\n          <input onChange={this.handleChange} type=\"text\" name=\"name\" value={this.state.name} />\n          <input onChange={this.handleChange} type=\"text\" name=\"image\" value={this.state.image} />\n          <br />\n          <button>Update</button>\n        </form>\n      </div>;\n  }\n}\n","\nimport React, { Component } from 'react'\nimport Memories from './Memories'\nimport CreateMemory from './CreateMemory'\nimport EditCastle from './EditCastle'\nimport JSONAPIAdapter from \"../JSONAPIAdpater\"\nconst ApiAdapter = new JSONAPIAdapter(\"api/v1/castles\");\nconst MemoryAdapter = new JSONAPIAdapter(\"api/v1/memories\");\n\nexport default class Castle extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state ={\n      name: this.props.castle.name,\n      image: this.props.castle.castle_image,\n      memories: [],\n      x: null, \n      y: null,\n      expanded: false,\n      editing: false,\n      newMem: false\n    }\n    \n  }\n  \n  componentDidMount() {\n    ApiAdapter.getSingle(this.props.castle.id)\n    .then(resp => this.setState({\n      memories: resp.memories\n    }))\n  }\n  handleExpand = () => {\n    this.setState({expanded: !this.state.expanded})\n\n  }\n\n  handleDelete =() => {\n    ApiAdapter.deleteItem(this.props.castle.id)\n    .then(resp => this.props.updateCurrentUser(resp))\n  }\n\n  handleEdit = (event, name=this.state.name, image=this.state.image) =>{\n    this.setState({ \n      name: name,\n      image: image,\n      editing: !this.state.editing \n    })\n  }\n  \n  updateCastle= (memory) => {\n    let memories = this.state.memories\n    memories.push(memory)\n    this.setState({\n      memories\n    })\n  }\n  \n  addMemory = (event) => {    \n    if (isNaN(event.target.width) || event.target.width === 0){\n      return \n    }\n    else {\n      this.setState({ \n        newMem: true,\n        x: (event.clientX / event.target.width) * 100 ,\n        y: (event.clientY / event.target.height) * 100\n      });\n    }\n  }\n\n  updateMemory = (memoryPositionObject, id) => {\n    MemoryAdapter.updateItem(memoryPositionObject, id)\n      .then(resp => resp.json())\n      .then(mem => {\n        const filtered = this.state.memories.filter(memory => {\n          return memory.id !== mem.id\n        })\n        this.setState({memories: [...filtered, mem], newMem: false})\n      })\n\n  }\n  \n  deleteMemory = (memoryId) => {\n    //optimitically rendering. The response here returns a castle and can't get status code unless I change the ApiAdpater which migh break other things that rely on its deleteItem method. \n    let newMems = this.state.memories.filter(memory => memory.id !== memoryId)\n    this.setState({\n      memories: newMems\n    })\n    MemoryAdapter.deleteItem(memoryId)\n  }\n  \n  jsxBuilder = () => {\n    return (\n      <>\n        <h2 className=\"castle-card-header\">{this.state.name} </h2>\n        <button className=\"expand-castle\" onClick={this.handleExpand}>\n          Min\n        </button>\n        <button className=\"edit-castle\" onClick={this.handleEdit}> Edit</button>\n        {!this.state.expanded && <label className=\"delete-castle\" onClick={this.handleDelete}>\n          <i className=\"far fa-times-circle\"></i>\n       </label>}\n       </>\n    )\n  }\n  \n  render() {\n    if (this.state.expanded === false && this.state.editing === false){\n      const styleNotExpanded = {\n        background: `url(${this.state.image})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        zIndex: '1',\n      }\n      return (\n        <div className=\"castle-card\" style={styleNotExpanded} >\n          {this.jsxBuilder()}\n        </div>\n      )\n\n    } \n    else if (this.state.expanded === true && this.state.editing === false){\n      return (\n        <div className=\"castle-card-expanded\" onClick={this.addMemory} >\n        <img src={this.state.image} alt={this.state.name}/>\n          \n          {this.state.newMem && <CreateMemory x={this.state.x} y={this.state.y} castle={this.props.castle} updateCastle={this.updateCastle} />}\n\n           <Memories memories={this.state.memories} ApiAdapter={ApiAdapter} deleteMemory={this.deleteMemory} updateMemory={this.updateMemory}/>\n\n         {this.jsxBuilder()}\n        </div>\n      )\n    } \n    else {\n      return (\n        <div className=\"castle-card-expanded editing\" onClick={this.addMemory} >\n          <img src={this.state.image} alt={this.state.name} />\n          <EditCastle handleEdit={this.handleEdit} ApiAdapter={ApiAdapter} name={this.state.name} image={this.state.image} castleId={this.props.castle.id}/>\n          {this.jsxBuilder()}\n        </div>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport Castle from './Castle'\n\nclass Castles extends Component {\n\n  renderCastles = () => {\n    return this.props.castles.map(castle => {\n      return <Castle castle={castle} key={castle.id+Math.random()} updateCurrentUser={this.props.updateCurrentUser} user={this.props.user} />\n    })\n  }\n\n\n\n  render() {\n  \n    return <div className=\"castles-container\" >{this.renderCastles()}</div>;\n\n    }\n\n\n\n}\n\n\nexport default Castles","import React, { Component } from \"react\";\nclass CreateCastle extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\",\n      user_id: this.props.user.id,\n      castle_image: null\n    }\n  }\n\n  createCastle = (event) => {\n    event.preventDefault()\n    const formData = new FormData();\n    formData.append(\"castle_image\", this.state.castle_image, this.state.castle_image.name);\n    formData.append('name', this.state.name)\n    formData.append(\"user_id\", localStorage.getItem(\"id\"))\n    return fetch(`https://memory-castle.herokuapp.com//api/v1/castles`, {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Authorization\": localStorage.getItem(\"jwt\")\n      },\n      body: formData\n    })\n    .then(resp => resp.json())\n    .then(newCastleData => {\n        let newUser = this.props.user\n        newUser.castles = this.props.user.castles.concat(newCastleData)\n        this.props.updateCurrentUser(newUser)\n        this.setState({\n          name: \"\",\n          user_id: this.props.user.id,\n          castle_image: null\n        })\n      })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  onFileChange = (e) => {\n    this.setState({castle_image: e.target.files[0]})\n  }\n\n  signOut = () => {\n    this.props.updateCurrentUser({})\n    localStorage.clear()\n  }\n  render(){\n    return <>\n    <div className=\"create-castle-form\">\n    <button onClick={this.signOut}>Sign out</button>\n        <form onSubmit={this.createCastle}>\n          <input type=\"text\" onChange={this.handleChange} placeholder=\"castle name\" name=\"name\" value={this.state.name} />\n          <label className=\"custom-file-upload\" htmlFor=\"file-upload\">\n            {this.state.castle_image ? this.state.castle_image.name : \"Upload Image\"}\n            <input type=\"file\" id=\"file-upload\" onChange={this.onFileChange}></input>\n          </label>\n          <button type=\"submit\">Create Castle</button>\n        </form>\n      </div>\n      </>\n\n  }\n}\n\n\nexport default CreateCastle;","import React from 'react';\nimport Castles from './Castles'\nimport CreateCastle from \"./CreateCastle\";\n\n\n\nconst Welcome = ({user}) => {\n  \n  return(\n  <div className=\"user-welcome\">\n    Welcome, {user.name}!\n  </div>\n  )\n}\n\n\nconst User = ({ user, updateCurrentUser}) => {\n  if (user.castles && user.castles.length > 0 ){\n    return <>\n        <Welcome user={user} />\n        <CreateCastle user={user} updateCurrentUser={updateCurrentUser} />\n        <Castles castles={user.castles} updateCurrentUser={updateCurrentUser} user={user} />\n      </>;\n  } else {\n    return (\n      <>\n        <Welcome user={user} />\n        <div className=\"no-castle-splash\">\n          You don't have any castles create one.\n        </div>\n        <CreateCastle user={user} updateCurrentUser={updateCurrentUser}/>\n      </>\n      )\n  }\n}\n\nexport default User; \n","import React, { Component } from 'react';\nimport User from './User';\nimport JSONAPIAdapter from \"../JSONAPIAdpater\";\nconst ApiAdapter = new JSONAPIAdapter(\"api/v1/users\");\n\n class Users extends Component {\n\n  state = {\n    name: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      signUp: false,\n      currentUser: {}\n    }\n\n  componentDidMount(){\n    if (localStorage.getItem('jwt') && localStorage.getItem('id')){\n      this.setCurrentUser(localStorage.getItem('id'))\n    }\n  }\n  \n  isEmpty = (obj) => {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key))\n        return false;\n    }\n    return true;\n  } \n\n   handleChange = (event) => {\n     if (event.target.value !== \" \") {\n       this.setState({ [event.target.name]: event.target.value});\n     }\n   }\n\n   setCurrentUser = (id) => {\n      ApiAdapter.getSingle(id)\n      .then(currentUser => {\n        this.setState({currentUser})\n      })\n    }\n  \n\n   updateCurrentUser = (user) => {\n      this.setState({\n        currentUser: user,\n        email: \"\",\n        password: \"\",\n        passwordConfirmation: \"\"\n      })\n   }\n\n   createNewUser = () => {\n     if (this.state.password !== this.state.passwordConfirmation){\n       alert(\"Passwords don't  match please try again\")\n       return\n     }\n    return ApiAdapter.createItem({ name: this.state.name, email: this.state.email, password: this.state.password })\n       .then(resp => {\n         if (resp.ok) {\n           // Add user to something? \n         }\n         else {\n           console.error(resp)\n         }\n         return resp.json()\n       })\n      .then(response => {\n        localStorage.setItem('jwt', response.jwt)\n        localStorage.setItem('id', response.user.id)\n        this.setCurrentUser(response.user.id)\n      })\n   }\n\n   loginUser = (e) => {\n    e.preventDefault()\n     return ApiAdapter.createItem({user: { email: this.state.email,password: this.state.password }}, 'login')\n       .then(resp => {\n         if (resp.ok) {\n           // Add user to something? \n         }\n         else {\n           console.error(resp)\n         }\n         return resp.json()\n       })\n       .then(response => {\n         if (response.user){\n           localStorage.setItem('jwt', response.jwt)\n           localStorage.setItem('id', response.user.id)\n           this.setCurrentUser(response.user.id)\n         } else {\n           alert(\"Username and Password not found\")\n           return\n         }\n       })\n    }\n\n\n\n  render() {\n    console.log(this.state)\n    if (this.isEmpty(this.state.currentUser)){\n      return (\n        <>\n          <form className=\"sign-in-form\" onSubmit={this.state.signUp ? this.createNewUser : this.loginUser}>\n\n          { this.state.signUp && <input \n                                  onChange={this.handleChange} \n                                  type=\"text\" \n                                  name=\"name\" \n                                  value={this.state.name} \n                                  placeholder=\"your name\"\n                                 />\n          }\n          <input onChange={this.handleChange} type=\"email\" name=\"email\" value={this.state.email} placeholder=\"your@email.com\" />\n          <input onChange={this.handleChange} type=\"password\" name=\"password\" value={this.state.password} placeholder=\"password 6 characters\"/>\n          { this.state.signUp && <input \n                                      onChange={this.handleChange} \n                                      type=\"password\" \n                                      name=\"passwordConfirmation\" \n                                      value={this.state.passwordConfirmation} \n                                      placeholder=\"password 6 characters\"\n                                    />\n          }\n          <button type=\"submit\" name=\"submit\">\n            {this.state.signUp ? \"Sign up\" : \"Sign in\"}\n          </button>\n            {this.state.signUp ? <label className=\"link\" onClick={() => this.setState({ signUp: false })}>Login</label> : <label className=\"link\" onClick={() => this.setState({signUp: true})}>Sign Up</label>}\n        </form>\n        </>\n      )\n    }\n    else {\n      return (\n        <>\n        <User user={this.state.currentUser} updateCurrentUser={this.updateCurrentUser} ApiAdapter={ApiAdapter}/>\n        </>\n      )\n    }\n  }\n\n}\n\n\n\nexport default Users;","import React, { Component } from 'react';\nimport Users from \"./components/Users\";\n\nclass App extends Component {\n  \n\n  render() {\n    return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n          Welcome to Memory Castle\n        </header>\n        <div className=\"intro\">\n          A memory palace is an imaginary location in\n          your mind where you can store mnemonic images. The most common\n          type of memory palace involves making a journey through a place\n          you know well, like a building or town. Along that journey there\n          are specific locations that you always visit in the same order.\n          <a href=\"https://sansforgetica.rmit/\" rel=\"noopener noreferrer\" target=\"_blank\">On your journey you will see this crazy font. Its a font developed by MIT. It's scientifically designed to help you remember things. </a>\n        </div>\n        <Users/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}